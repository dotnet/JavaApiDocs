### YamlMime:JavaType
uid: "com.microsoft.signalr.StreamItem"
fullName: "com.microsoft.signalr.StreamItem"
name: "StreamItem"
nameWithType: "StreamItem"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.signalr.HubMessage?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.signalr.HubMessage.getMessageType()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public final class StreamItem extends HubMessage"
constructors:
- uid: "com.microsoft.signalr.StreamItem.StreamItem(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.Object)"
  fullName: "com.microsoft.signalr.StreamItem.StreamItem(Map<String,String> headers, String invocationId, Object item)"
  name: "StreamItem(Map<String,String> headers, String invocationId, Object item)"
  nameWithType: "StreamItem.StreamItem(Map<String,String> headers, String invocationId, Object item)"
  parameters:
  - name: "headers"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "invocationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "item"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public StreamItem(Map<String,String> headers, String invocationId, Object item)"
methods:
- uid: "com.microsoft.signalr.StreamItem.getHeaders()"
  fullName: "com.microsoft.signalr.StreamItem.getHeaders()"
  name: "getHeaders()"
  nameWithType: "StreamItem.getHeaders()"
  syntax: "public Map<String,String> getHeaders()"
  returns:
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.signalr.StreamItem.getInvocationId()"
  fullName: "com.microsoft.signalr.StreamItem.getInvocationId()"
  name: "getInvocationId()"
  nameWithType: "StreamItem.getInvocationId()"
  syntax: "public String getInvocationId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.StreamItem.getItem()"
  fullName: "com.microsoft.signalr.StreamItem.getItem()"
  name: "getItem()"
  nameWithType: "StreamItem.getItem()"
  syntax: "public Object getItem()"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.StreamItem.getMessageType()"
  fullName: "com.microsoft.signalr.StreamItem.getMessageType()"
  name: "getMessageType()"
  nameWithType: "StreamItem.getMessageType()"
  overridden: "com.microsoft.signalr.HubMessage.getMessageType()"
  syntax: "public HubMessageType getMessageType()"
  returns:
    type: "<xref href=\"com.microsoft.signalr.HubMessageType?alt=com.microsoft.signalr.HubMessageType&text=HubMessageType\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.signalr"
artifact: com.microsoft.signalr:signalr:5.0.10

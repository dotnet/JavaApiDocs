### YamlMime:JavaType
uid: "com.microsoft.signalr.HubConnection"
fullName: "com.microsoft.signalr.HubConnection"
name: "HubConnection"
nameWithType: "HubConnection"
summary: "A connection used to invoke hub methods on a SignalR Server."
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class HubConnection implements AutoCloseable"
methods:
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6,T7,T8>on(java.lang.String,com.microsoft.signalr.Action8<T1,T2,T3,T4,T5,T6,T7,T8>,java.lang.Class<T1>,java.lang.Class<T2>,java.lang.Class<T3>,java.lang.Class<T4>,java.lang.Class<T5>,java.lang.Class<T6>,java.lang.Class<T7>,java.lang.Class<T8>)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6,T7,T8>on(String target, Action8<T1,T2,T3,T4,T5,T6,T7,T8> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6, Class<T7> param7, Class<T8> param8)"
  name: "<T1,T2,T3,T4,T5,T6,T7,T8>on(String target, Action8<T1,T2,T3,T4,T5,T6,T7,T8> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6, Class<T7> param7, Class<T8> param8)"
  nameWithType: "HubConnection.<T1,T2,T3,T4,T5,T6,T7,T8>on(String target, Action8<T1,T2,T3,T4,T5,T6,T7,T8> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6, Class<T7> param7, Class<T8> param8)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action8?alt=com.microsoft.signalr.Action8&text=Action8\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T7?alt=T7&text=T7\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T8?alt=T8&text=T8\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fifth parameter."
    name: "param5"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The sixth parameter."
    name: "param6"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The seventh parameter."
    name: "param7"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T7?alt=T7&text=T7\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The eighth parameter"
    name: "param8"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T8?alt=T8&text=T8\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Subscription <T1,T2,T3,T4,T5,T6,T7,T8>on(String target, Action8<T1,T2,T3,T4,T5,T6,T7,T8> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6, Class<T7> param7, Class<T8> param8)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for primitives and non-generic classes."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6,T7,T8>on(java.lang.String,com.microsoft.signalr.Action8<T1,T2,T3,T4,T5,T6,T7,T8>,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6,T7,T8>on(String target, Action8<T1,T2,T3,T4,T5,T6,T7,T8> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6, Type param7, Type param8)"
  name: "<T1,T2,T3,T4,T5,T6,T7,T8>on(String target, Action8<T1,T2,T3,T4,T5,T6,T7,T8> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6, Type param7, Type param8)"
  nameWithType: "HubConnection.<T1,T2,T3,T4,T5,T6,T7,T8>on(String target, Action8<T1,T2,T3,T4,T5,T6,T7,T8> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6, Type param7, Type param8)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action8?alt=com.microsoft.signalr.Action8&text=Action8\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T7?alt=T7&text=T7\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T8?alt=T8&text=T8\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fifth parameter."
    name: "param5"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The sixth parameter."
    name: "param6"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The seventh parameter."
    name: "param7"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The eighth parameter"
    name: "param8"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription <T1,T2,T3,T4,T5,T6,T7,T8>on(String target, Action8<T1,T2,T3,T4,T5,T6,T7,T8> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6, Type param7, Type param8)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for generic classes and Parameterized Collections, like List or Map. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6,T7>on(java.lang.String,com.microsoft.signalr.Action7<T1,T2,T3,T4,T5,T6,T7>,java.lang.Class<T1>,java.lang.Class<T2>,java.lang.Class<T3>,java.lang.Class<T4>,java.lang.Class<T5>,java.lang.Class<T6>,java.lang.Class<T7>)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6,T7>on(String target, Action7<T1,T2,T3,T4,T5,T6,T7> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6, Class<T7> param7)"
  name: "<T1,T2,T3,T4,T5,T6,T7>on(String target, Action7<T1,T2,T3,T4,T5,T6,T7> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6, Class<T7> param7)"
  nameWithType: "HubConnection.<T1,T2,T3,T4,T5,T6,T7>on(String target, Action7<T1,T2,T3,T4,T5,T6,T7> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6, Class<T7> param7)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action7?alt=com.microsoft.signalr.Action7&text=Action7\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T7?alt=T7&text=T7\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fifth parameter."
    name: "param5"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The sixth parameter."
    name: "param6"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The seventh parameter."
    name: "param7"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T7?alt=T7&text=T7\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Subscription <T1,T2,T3,T4,T5,T6,T7>on(String target, Action7<T1,T2,T3,T4,T5,T6,T7> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6, Class<T7> param7)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for primitives and non-generic classes."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6,T7>on(java.lang.String,com.microsoft.signalr.Action7<T1,T2,T3,T4,T5,T6,T7>,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6,T7>on(String target, Action7<T1,T2,T3,T4,T5,T6,T7> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6, Type param7)"
  name: "<T1,T2,T3,T4,T5,T6,T7>on(String target, Action7<T1,T2,T3,T4,T5,T6,T7> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6, Type param7)"
  nameWithType: "HubConnection.<T1,T2,T3,T4,T5,T6,T7>on(String target, Action7<T1,T2,T3,T4,T5,T6,T7> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6, Type param7)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action7?alt=com.microsoft.signalr.Action7&text=Action7\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T7?alt=T7&text=T7\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fifth parameter."
    name: "param5"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The sixth parameter."
    name: "param6"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The seventh parameter."
    name: "param7"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription <T1,T2,T3,T4,T5,T6,T7>on(String target, Action7<T1,T2,T3,T4,T5,T6,T7> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6, Type param7)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for generic classes and Parameterized Collections, like List or Map. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6>on(java.lang.String,com.microsoft.signalr.Action6<T1,T2,T3,T4,T5,T6>,java.lang.Class<T1>,java.lang.Class<T2>,java.lang.Class<T3>,java.lang.Class<T4>,java.lang.Class<T5>,java.lang.Class<T6>)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6>on(String target, Action6<T1,T2,T3,T4,T5,T6> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6)"
  name: "<T1,T2,T3,T4,T5,T6>on(String target, Action6<T1,T2,T3,T4,T5,T6> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6)"
  nameWithType: "HubConnection.<T1,T2,T3,T4,T5,T6>on(String target, Action6<T1,T2,T3,T4,T5,T6> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action6?alt=com.microsoft.signalr.Action6&text=Action6\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fifth parameter."
    name: "param5"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The sixth parameter."
    name: "param6"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Subscription <T1,T2,T3,T4,T5,T6>on(String target, Action6<T1,T2,T3,T4,T5,T6> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5, Class<T6> param6)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for primitives and non-generic classes."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6>on(java.lang.String,com.microsoft.signalr.Action6<T1,T2,T3,T4,T5,T6>,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5,T6>on(String target, Action6<T1,T2,T3,T4,T5,T6> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6)"
  name: "<T1,T2,T3,T4,T5,T6>on(String target, Action6<T1,T2,T3,T4,T5,T6> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6)"
  nameWithType: "HubConnection.<T1,T2,T3,T4,T5,T6>on(String target, Action6<T1,T2,T3,T4,T5,T6> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action6?alt=com.microsoft.signalr.Action6&text=Action6\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T6?alt=T6&text=T6\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fifth parameter."
    name: "param5"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The sixth parameter."
    name: "param6"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription <T1,T2,T3,T4,T5,T6>on(String target, Action6<T1,T2,T3,T4,T5,T6> callback, Type param1, Type param2, Type param3, Type param4, Type param5, Type param6)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for generic classes and Parameterized Collections, like List or Map. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5>on(java.lang.String,com.microsoft.signalr.Action5<T1,T2,T3,T4,T5>,java.lang.Class<T1>,java.lang.Class<T2>,java.lang.Class<T3>,java.lang.Class<T4>,java.lang.Class<T5>)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5>on(String target, Action5<T1,T2,T3,T4,T5> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5)"
  name: "<T1,T2,T3,T4,T5>on(String target, Action5<T1,T2,T3,T4,T5> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5)"
  nameWithType: "HubConnection.<T1,T2,T3,T4,T5>on(String target, Action5<T1,T2,T3,T4,T5> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action5?alt=com.microsoft.signalr.Action5&text=Action5\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fifth parameter."
    name: "param5"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Subscription <T1,T2,T3,T4,T5>on(String target, Action5<T1,T2,T3,T4,T5> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4, Class<T5> param5)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for primitives and non-generic classes."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5>on(java.lang.String,com.microsoft.signalr.Action5<T1,T2,T3,T4,T5>,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4,T5>on(String target, Action5<T1,T2,T3,T4,T5> callback, Type param1, Type param2, Type param3, Type param4, Type param5)"
  name: "<T1,T2,T3,T4,T5>on(String target, Action5<T1,T2,T3,T4,T5> callback, Type param1, Type param2, Type param3, Type param4, Type param5)"
  nameWithType: "HubConnection.<T1,T2,T3,T4,T5>on(String target, Action5<T1,T2,T3,T4,T5> callback, Type param1, Type param2, Type param3, Type param4, Type param5)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action5?alt=com.microsoft.signalr.Action5&text=Action5\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T5?alt=T5&text=T5\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fifth parameter."
    name: "param5"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription <T1,T2,T3,T4,T5>on(String target, Action5<T1,T2,T3,T4,T5> callback, Type param1, Type param2, Type param3, Type param4, Type param5)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for generic classes and Parameterized Collections, like List or Map. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4>on(java.lang.String,com.microsoft.signalr.Action4<T1,T2,T3,T4>,java.lang.Class<T1>,java.lang.Class<T2>,java.lang.Class<T3>,java.lang.Class<T4>)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4>on(String target, Action4<T1,T2,T3,T4> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4)"
  name: "<T1,T2,T3,T4>on(String target, Action4<T1,T2,T3,T4> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4)"
  nameWithType: "HubConnection.<T1,T2,T3,T4>on(String target, Action4<T1,T2,T3,T4> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action4?alt=com.microsoft.signalr.Action4&text=Action4\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Subscription <T1,T2,T3,T4>on(String target, Action4<T1,T2,T3,T4> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3, Class<T4> param4)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for primitives and non-generic classes."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4>on(java.lang.String,com.microsoft.signalr.Action4<T1,T2,T3,T4>,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3,T4>on(String target, Action4<T1,T2,T3,T4> callback, Type param1, Type param2, Type param3, Type param4)"
  name: "<T1,T2,T3,T4>on(String target, Action4<T1,T2,T3,T4> callback, Type param1, Type param2, Type param3, Type param4)"
  nameWithType: "HubConnection.<T1,T2,T3,T4>on(String target, Action4<T1,T2,T3,T4> callback, Type param1, Type param2, Type param3, Type param4)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action4?alt=com.microsoft.signalr.Action4&text=Action4\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T4?alt=T4&text=T4\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The fourth parameter."
    name: "param4"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription <T1,T2,T3,T4>on(String target, Action4<T1,T2,T3,T4> callback, Type param1, Type param2, Type param3, Type param4)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for generic classes and Parameterized Collections, like List or Map. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3>on(java.lang.String,com.microsoft.signalr.Action3<T1,T2,T3>,java.lang.Class<T1>,java.lang.Class<T2>,java.lang.Class<T3>)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3>on(String target, Action3<T1,T2,T3> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3)"
  name: "<T1,T2,T3>on(String target, Action3<T1,T2,T3> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3)"
  nameWithType: "HubConnection.<T1,T2,T3>on(String target, Action3<T1,T2,T3> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action3?alt=com.microsoft.signalr.Action3&text=Action3\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Subscription <T1,T2,T3>on(String target, Action3<T1,T2,T3> callback, Class<T1> param1, Class<T2> param2, Class<T3> param3)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for primitives and non-generic classes."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2,T3>on(java.lang.String,com.microsoft.signalr.Action3<T1,T2,T3>,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2,T3>on(String target, Action3<T1,T2,T3> callback, Type param1, Type param2, Type param3)"
  name: "<T1,T2,T3>on(String target, Action3<T1,T2,T3> callback, Type param1, Type param2, Type param3)"
  nameWithType: "HubConnection.<T1,T2,T3>on(String target, Action3<T1,T2,T3> callback, Type param1, Type param2, Type param3)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action3?alt=com.microsoft.signalr.Action3&text=Action3\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T3?alt=T3&text=T3\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The third parameter."
    name: "param3"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription <T1,T2,T3>on(String target, Action3<T1,T2,T3> callback, Type param1, Type param2, Type param3)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for generic classes and Parameterized Collections, like List or Map. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2>on(java.lang.String,com.microsoft.signalr.Action2<T1,T2>,java.lang.Class<T1>,java.lang.Class<T2>)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2>on(String target, Action2<T1,T2> callback, Class<T1> param1, Class<T2> param2)"
  name: "<T1,T2>on(String target, Action2<T1,T2> callback, Class<T1> param1, Class<T2> param2)"
  nameWithType: "HubConnection.<T1,T2>on(String target, Action2<T1,T2> callback, Class<T1> param1, Class<T2> param2)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action2?alt=com.microsoft.signalr.Action2&text=Action2\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Subscription <T1,T2>on(String target, Action2<T1,T2> callback, Class<T1> param1, Class<T2> param2)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for primitives and non-generic classes."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1,T2>on(java.lang.String,com.microsoft.signalr.Action2<T1,T2>,java.lang.reflect.Type,java.lang.reflect.Type)"
  fullName: "com.microsoft.signalr.HubConnection.<T1,T2>on(String target, Action2<T1,T2> callback, Type param1, Type param2)"
  name: "<T1,T2>on(String target, Action2<T1,T2> callback, Type param1, Type param2)"
  nameWithType: "HubConnection.<T1,T2>on(String target, Action2<T1,T2> callback, Type param1, Type param2)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action2?alt=com.microsoft.signalr.Action2&text=Action2\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />,<xref href=\"T2?alt=T2&text=T2\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The second parameter."
    name: "param2"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription <T1,T2>on(String target, Action2<T1,T2> callback, Type param1, Type param2)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for generic classes and Parameterized Collections, like List or Map. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1>on(java.lang.String,com.microsoft.signalr.Action1<T1>,java.lang.Class<T1>)"
  fullName: "com.microsoft.signalr.HubConnection.<T1>on(String target, Action1<T1> callback, Class<T1> param1)"
  name: "<T1>on(String target, Action1<T1> callback, Class<T1> param1)"
  nameWithType: "HubConnection.<T1>on(String target, Action1<T1> callback, Class<T1> param1)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action1?alt=com.microsoft.signalr.Action1&text=Action1\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public Subscription <T1>on(String target, Action1<T1> callback, Class<T1> param1)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for primitives and non-generic classes."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T1>on(java.lang.String,com.microsoft.signalr.Action1<T1>,java.lang.reflect.Type)"
  fullName: "com.microsoft.signalr.HubConnection.<T1>on(String target, Action1<T1> callback, Type param1)"
  name: "<T1>on(String target, Action1<T1> callback, Type param1)"
  nameWithType: "HubConnection.<T1>on(String target, Action1<T1> callback, Type param1)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action1?alt=com.microsoft.signalr.Action1&text=Action1\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T1?alt=T1&text=T1\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The first parameter."
    name: "param1"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription <T1>on(String target, Action1<T1> callback, Type param1)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked. Should be used for generic classes and Parameterized Collections, like List or Map. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.<T>invoke(java.lang.Class<T>,java.lang.String,java.lang.Object...)"
  fullName: "com.microsoft.signalr.HubConnection.<T>invoke(Class<T> returnType, String method, Object[] args)"
  name: "<T>invoke(Class<T> returnType, String method, Object[] args)"
  nameWithType: "HubConnection.<T>invoke(Class<T> returnType, String method, Object[] args)"
  summary: "Invokes a hub method on the server using the specified method name and arguments."
  parameters:
  - description: "The expected return type."
    name: "returnType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The name of the server method to invoke."
    name: "method"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The arguments used to invoke the server method."
    name: "args"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Single<T> <T>invoke(Class<T> returnType, String method, Object[] args)"
  desc: "Invokes a hub method on the server using the specified method name and arguments."
  returns:
    description: "A Single that yields the return value when the invocation has completed."
    type: "<xref href=\"io.reactivex.Single?alt=io.reactivex.Single&text=Single\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.signalr.HubConnection.<T>invoke(java.lang.reflect.Type,java.lang.String,java.lang.Object...)"
  fullName: "com.microsoft.signalr.HubConnection.<T>invoke(Type returnType, String method, Object[] args)"
  name: "<T>invoke(Type returnType, String method, Object[] args)"
  nameWithType: "HubConnection.<T>invoke(Type returnType, String method, Object[] args)"
  summary: "Invokes a hub method on the server using the specified method name and arguments."
  parameters:
  - description: "The expected return type."
    name: "returnType"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server method to invoke."
    name: "method"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The arguments used to invoke the server method."
    name: "args"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Single<T> <T>invoke(Type returnType, String method, Object[] args)"
  desc: "Invokes a hub method on the server using the specified method name and arguments. A Type can be retrieved using <xref uid=\"com.microsoft.signalr.TypeReference\" data-throw-if-not-resolved=\"false\" data-raw-source=\"TypeReference\"></xref>"
  returns:
    description: "A Single that yields the return value when the invocation has completed."
    type: "<xref href=\"io.reactivex.Single?alt=io.reactivex.Single&text=Single\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.signalr.HubConnection.<T>stream(java.lang.Class<T>,java.lang.String,java.lang.Object...)"
  fullName: "com.microsoft.signalr.HubConnection.<T>stream(Class<T> returnType, String method, Object[] args)"
  name: "<T>stream(Class<T> returnType, String method, Object[] args)"
  nameWithType: "HubConnection.<T>stream(Class<T> returnType, String method, Object[] args)"
  summary: "Invokes a streaming hub method on the server using the specified name and arguments."
  parameters:
  - description: "The expected return type of the stream items."
    name: "returnType"
    type: "<xref href=\"java.lang.Class?alt=java.lang.Class&text=Class\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
  - description: "The name of the server method to invoke."
    name: "method"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The arguments used to invoke the server method."
    name: "args"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Observable<T> <T>stream(Class<T> returnType, String method, Object[] args)"
  desc: "Invokes a streaming hub method on the server using the specified name and arguments."
  returns:
    description: "An observable that yields the streaming results from the server."
    type: "<xref href=\"io.reactivex.Observable?alt=io.reactivex.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.signalr.HubConnection.<T>stream(java.lang.reflect.Type,java.lang.String,java.lang.Object...)"
  fullName: "com.microsoft.signalr.HubConnection.<T>stream(Type returnType, String method, Object[] args)"
  name: "<T>stream(Type returnType, String method, Object[] args)"
  nameWithType: "HubConnection.<T>stream(Type returnType, String method, Object[] args)"
  summary: "Invokes a streaming hub method on the server using the specified name and arguments."
  parameters:
  - description: "The expected return type of the stream items."
    name: "returnType"
    type: "<xref href=\"java.lang.reflect.Type?alt=java.lang.reflect.Type&text=Type\" data-throw-if-not-resolved=\"False\" />"
  - description: "The name of the server method to invoke."
    name: "method"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The arguments used to invoke the server method."
    name: "args"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Observable<T> <T>stream(Type returnType, String method, Object[] args)"
  desc: "Invokes a streaming hub method on the server using the specified name and arguments."
  returns:
    description: "An observable that yields the streaming results from the server."
    type: "<xref href=\"io.reactivex.Observable?alt=io.reactivex.Observable&text=Observable\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"T?alt=T&text=T\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.signalr.HubConnection.close()"
  fullName: "com.microsoft.signalr.HubConnection.close()"
  name: "close()"
  nameWithType: "HubConnection.close()"
  syntax: "public void close()"
- uid: "com.microsoft.signalr.HubConnection.getConnectionId()"
  fullName: "com.microsoft.signalr.HubConnection.getConnectionId()"
  name: "getConnectionId()"
  nameWithType: "HubConnection.getConnectionId()"
  summary: "Gets the connections connection<wbr>Id."
  syntax: "public String getConnectionId()"
  desc: "Gets the connections connectionId. This value will be cleared when the connection is stopped and will have a new value every time the connection is successfully started."
  returns:
    description: "A string representing the the client's connectionId."
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.getConnectionState()"
  fullName: "com.microsoft.signalr.HubConnection.getConnectionState()"
  name: "getConnectionState()"
  nameWithType: "HubConnection.getConnectionState()"
  summary: "Indicates the state of the <xref uid=\"com.microsoft.signalr.HubConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HubConnection\"></xref> to the server."
  syntax: "public HubConnectionState getConnectionState()"
  desc: "Indicates the state of the <xref uid=\"com.microsoft.signalr.HubConnection\" data-throw-if-not-resolved=\"false\" data-raw-source=\"HubConnection\"></xref> to the server."
  returns:
    description: "HubConnection state enum."
    type: "<xref href=\"com.microsoft.signalr.HubConnectionState?alt=com.microsoft.signalr.HubConnectionState&text=HubConnectionState\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.getKeepAliveInterval()"
  fullName: "com.microsoft.signalr.HubConnection.getKeepAliveInterval()"
  name: "getKeepAliveInterval()"
  nameWithType: "HubConnection.getKeepAliveInterval()"
  summary: "Gets the keep alive interval."
  syntax: "public long getKeepAliveInterval()"
  desc: "Gets the keep alive interval."
  returns:
    description: "The interval (specified in milliseconds) between keep alive messages."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.getServerTimeout()"
  fullName: "com.microsoft.signalr.HubConnection.getServerTimeout()"
  name: "getServerTimeout()"
  nameWithType: "HubConnection.getServerTimeout()"
  summary: "Gets the server timeout duration."
  syntax: "public long getServerTimeout()"
  desc: "Gets the server timeout duration."
  returns:
    description: "The server timeout duration (specified in milliseconds)."
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.invoke(java.lang.String,java.lang.Object...)"
  fullName: "com.microsoft.signalr.HubConnection.invoke(String method, Object[] args)"
  name: "invoke(String method, Object[] args)"
  nameWithType: "HubConnection.invoke(String method, Object[] args)"
  summary: "Invokes a hub method on the server using the specified method name and arguments."
  parameters:
  - description: "The name of the server method to invoke."
    name: "method"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The arguments used to invoke the server method."
    name: "args"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public Completable invoke(String method, Object[] args)"
  desc: "Invokes a hub method on the server using the specified method name and arguments."
  returns:
    description: "A Completable that indicates when the invocation has completed."
    type: "<xref href=\"io.reactivex.Completable?alt=io.reactivex.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.on(java.lang.String,com.microsoft.signalr.Action)"
  fullName: "com.microsoft.signalr.HubConnection.on(String target, Action callback)"
  name: "on(String target, Action callback)"
  nameWithType: "HubConnection.on(String target, Action callback)"
  summary: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  parameters:
  - description: "The name of the hub method to define."
    name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The handler that will be raised when the hub method is invoked."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.Action?alt=com.microsoft.signalr.Action&text=Action\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public Subscription on(String target, Action callback)"
  desc: "Registers a handler that will be invoked when the hub method with the specified method name is invoked."
  returns:
    description: "A <xref uid=\"com.microsoft.signalr.Subscription\" data-throw-if-not-resolved=\"false\" data-raw-source=\"Subscription\"></xref> that can be disposed to unsubscribe from the hub method."
    type: "<xref href=\"com.microsoft.signalr.Subscription?alt=com.microsoft.signalr.Subscription&text=Subscription\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.onClosed(com.microsoft.signalr.OnClosedCallback)"
  fullName: "com.microsoft.signalr.HubConnection.onClosed(OnClosedCallback callback)"
  name: "onClosed(OnClosedCallback callback)"
  nameWithType: "HubConnection.onClosed(OnClosedCallback callback)"
  summary: "Registers a callback to run when the connection is closed."
  parameters:
  - description: "A callback to run when the connection closes."
    name: "callback"
    type: "<xref href=\"com.microsoft.signalr.OnClosedCallback?alt=com.microsoft.signalr.OnClosedCallback&text=OnClosedCallback\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void onClosed(OnClosedCallback callback)"
  desc: "Registers a callback to run when the connection is closed."
- uid: "com.microsoft.signalr.HubConnection.remove(java.lang.String)"
  fullName: "com.microsoft.signalr.HubConnection.remove(String name)"
  name: "remove(String name)"
  nameWithType: "HubConnection.remove(String name)"
  summary: "Removes all handlers associated with the method with the specified method name."
  parameters:
  - description: "The name of the hub method from which handlers are being removed."
    name: "name"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void remove(String name)"
  desc: "Removes all handlers associated with the method with the specified method name."
- uid: "com.microsoft.signalr.HubConnection.send(java.lang.String,java.lang.Object...)"
  fullName: "com.microsoft.signalr.HubConnection.send(String method, Object[] args)"
  name: "send(String method, Object[] args)"
  nameWithType: "HubConnection.send(String method, Object[] args)"
  summary: "Invokes a hub method on the server using the specified method name."
  parameters:
  - description: "The name of the server method to invoke."
    name: "method"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - description: "The arguments to be passed to the method."
    name: "args"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  syntax: "public void send(String method, Object[] args)"
  desc: "Invokes a hub method on the server using the specified method name. Does not wait for a response from the receiver."
- uid: "com.microsoft.signalr.HubConnection.setBaseUrl(java.lang.String)"
  fullName: "com.microsoft.signalr.HubConnection.setBaseUrl(String url)"
  name: "setBaseUrl(String url)"
  nameWithType: "HubConnection.setBaseUrl(String url)"
  summary: "Sets a new url for the Hub<wbr>Connection."
  parameters:
  - description: "The url to connect to."
    name: "url"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setBaseUrl(String url)"
  desc: "Sets a new url for the HubConnection."
- uid: "com.microsoft.signalr.HubConnection.setKeepAliveInterval(long)"
  fullName: "com.microsoft.signalr.HubConnection.setKeepAliveInterval(long keepAliveIntervalInMilliseconds)"
  name: "setKeepAliveInterval(long keepAliveIntervalInMilliseconds)"
  nameWithType: "HubConnection.setKeepAliveInterval(long keepAliveIntervalInMilliseconds)"
  summary: "Sets the keep alive interval duration."
  parameters:
  - description: "The interval (specified in milliseconds) at which the connection should send keep alive messages."
    name: "keepAliveIntervalInMilliseconds"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setKeepAliveInterval(long keepAliveIntervalInMilliseconds)"
  desc: "Sets the keep alive interval duration."
- uid: "com.microsoft.signalr.HubConnection.setServerTimeout(long)"
  fullName: "com.microsoft.signalr.HubConnection.setServerTimeout(long serverTimeoutInMilliseconds)"
  name: "setServerTimeout(long serverTimeoutInMilliseconds)"
  nameWithType: "HubConnection.setServerTimeout(long serverTimeoutInMilliseconds)"
  summary: "Sets the server timeout interval for the connection."
  parameters:
  - description: "The server timeout duration (specified in milliseconds)."
    name: "serverTimeoutInMilliseconds"
    type: "<xref href=\"long?alt=long&text=long\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public void setServerTimeout(long serverTimeoutInMilliseconds)"
  desc: "Sets the server timeout interval for the connection."
- uid: "com.microsoft.signalr.HubConnection.start()"
  fullName: "com.microsoft.signalr.HubConnection.start()"
  name: "start()"
  nameWithType: "HubConnection.start()"
  summary: "Starts a connection to the server."
  syntax: "public Completable start()"
  desc: "Starts a connection to the server."
  returns:
    description: "A Completable that completes when the connection has been established."
    type: "<xref href=\"io.reactivex.Completable?alt=io.reactivex.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.HubConnection.stop()"
  fullName: "com.microsoft.signalr.HubConnection.stop()"
  name: "stop()"
  nameWithType: "HubConnection.stop()"
  summary: "Stops a connection to the server."
  syntax: "public Completable stop()"
  desc: "Stops a connection to the server."
  returns:
    description: "A Completable that completes when the connection has been stopped."
    type: "<xref href=\"io.reactivex.Completable?alt=io.reactivex.Completable&text=Completable\" data-throw-if-not-resolved=\"False\" />"
type: "class"
desc: "A connection used to invoke hub methods on a SignalR Server."
implements:
- "<xref href=\"java.lang.AutoCloseable?alt=java.lang.AutoCloseable&text=AutoCloseable\" data-throw-if-not-resolved=\"False\" />"
metadata: {}
package: "com.microsoft.signalr"
artifact: com.microsoft.signalr:signalr:5.0.10

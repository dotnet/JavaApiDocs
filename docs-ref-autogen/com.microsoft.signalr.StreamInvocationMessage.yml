### YamlMime:JavaType
uid: "com.microsoft.signalr.StreamInvocationMessage"
fullName: "com.microsoft.signalr.StreamInvocationMessage"
name: "StreamInvocationMessage"
nameWithType: "StreamInvocationMessage"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.signalr.HubMessage?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.signalr.InvocationMessage?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedClassMethods:
- classRef: "<xref href=\"com.microsoft.signalr.InvocationMessage?alt=com.microsoft.signalr.InvocationMessage&text=InvocationMessage\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"com.microsoft.signalr.InvocationMessage.getArguments()?alt=com.microsoft.signalr.InvocationMessage.getArguments&text=getArguments\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.signalr.InvocationMessage.getHeaders()?alt=com.microsoft.signalr.InvocationMessage.getHeaders&text=getHeaders\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.signalr.InvocationMessage.getInvocationId()?alt=com.microsoft.signalr.InvocationMessage.getInvocationId&text=getInvocationId\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.signalr.InvocationMessage.getMessageType()?alt=com.microsoft.signalr.InvocationMessage.getMessageType&text=getMessageType\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.signalr.InvocationMessage.getStreamIds()?alt=com.microsoft.signalr.InvocationMessage.getStreamIds&text=getStreamIds\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"com.microsoft.signalr.InvocationMessage.getTarget()?alt=com.microsoft.signalr.InvocationMessage.getTarget&text=getTarget\" data-throw-if-not-resolved=\"False\" />"
- classRef: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />"
  methodsRef:
  - "<xref href=\"java.lang.Object.clone()?alt=java.lang.Object.clone&text=clone\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.equals(java.lang.Object)?alt=java.lang.Object.equals&text=equals\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.finalize()?alt=java.lang.Object.finalize&text=finalize\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.getClass()?alt=java.lang.Object.getClass&text=getClass\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.hashCode()?alt=java.lang.Object.hashCode&text=hashCode\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notify()?alt=java.lang.Object.notify&text=notify\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.notifyAll()?alt=java.lang.Object.notifyAll&text=notifyAll\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.toString()?alt=java.lang.Object.toString&text=toString\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait()?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
  - "<xref href=\"java.lang.Object.wait(long,int)?alt=java.lang.Object.wait&text=wait\" data-throw-if-not-resolved=\"False\" />"
syntax: "public final class StreamInvocationMessage extends InvocationMessage"
constructors:
- uid: "com.microsoft.signalr.StreamInvocationMessage.StreamInvocationMessage(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.Object[],java.util.Collection<java.lang.String>)"
  fullName: "com.microsoft.signalr.StreamInvocationMessage.StreamInvocationMessage(Map<String,String> headers, String invocationId, String target, Object[] args, Collection<String> streamIds)"
  name: "StreamInvocationMessage(Map<String,String> headers, String invocationId, String target, Object[] args, Collection<String> streamIds)"
  nameWithType: "StreamInvocationMessage.StreamInvocationMessage(Map<String,String> headers, String invocationId, String target, Object[] args, Collection<String> streamIds)"
  parameters:
  - name: "headers"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "invocationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "args"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "streamIds"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public StreamInvocationMessage(Map<String,String> headers, String invocationId, String target, Object[] args, Collection<String> streamIds)"
methods:
- uid: "com.microsoft.signalr.StreamInvocationMessage.getMessageType()"
  fullName: "com.microsoft.signalr.StreamInvocationMessage.getMessageType()"
  name: "getMessageType()"
  nameWithType: "StreamInvocationMessage.getMessageType()"
  overridden: "com.microsoft.signalr.InvocationMessage.getMessageType()"
  syntax: "public HubMessageType getMessageType()"
  returns:
    type: "<xref href=\"com.microsoft.signalr.HubMessageType?alt=com.microsoft.signalr.HubMessageType&text=HubMessageType\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.signalr"
artifact: com.microsoft.signalr:signalr:5.0.10

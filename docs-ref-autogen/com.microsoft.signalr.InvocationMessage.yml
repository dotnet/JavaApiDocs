### YamlMime:JavaType
uid: "com.microsoft.signalr.InvocationMessage"
fullName: "com.microsoft.signalr.InvocationMessage"
name: "InvocationMessage"
nameWithType: "InvocationMessage"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.signalr.HubMessage?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.signalr.HubMessage.getMessageType()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class InvocationMessage extends HubMessage"
constructors:
- uid: "com.microsoft.signalr.InvocationMessage.InvocationMessage(java.util.Map<java.lang.String,java.lang.String>,java.lang.String,java.lang.String,java.lang.Object[],java.util.Collection<java.lang.String>)"
  fullName: "com.microsoft.signalr.InvocationMessage.InvocationMessage(Map<String,String> headers, String invocationId, String target, Object[] args, Collection<String> streamIds)"
  name: "InvocationMessage(Map<String,String> headers, String invocationId, String target, Object[] args, Collection<String> streamIds)"
  nameWithType: "InvocationMessage.InvocationMessage(Map<String,String> headers, String invocationId, String target, Object[] args, Collection<String> streamIds)"
  parameters:
  - name: "headers"
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  - name: "invocationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "args"
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
  - name: "streamIds"
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
  syntax: "public InvocationMessage(Map<String,String> headers, String invocationId, String target, Object[] args, Collection<String> streamIds)"
methods:
- uid: "com.microsoft.signalr.InvocationMessage.getArguments()"
  fullName: "com.microsoft.signalr.InvocationMessage.getArguments()"
  name: "getArguments()"
  nameWithType: "InvocationMessage.getArguments()"
  syntax: "public Object[] getArguments()"
  returns:
    type: "<xref href=\"java.lang.Object?alt=java.lang.Object&text=Object\" data-throw-if-not-resolved=\"False\" />[]"
- uid: "com.microsoft.signalr.InvocationMessage.getHeaders()"
  fullName: "com.microsoft.signalr.InvocationMessage.getHeaders()"
  name: "getHeaders()"
  nameWithType: "InvocationMessage.getHeaders()"
  syntax: "public Map<String,String> getHeaders()"
  returns:
    type: "<xref href=\"java.util.Map?alt=java.util.Map&text=Map\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />,<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.signalr.InvocationMessage.getInvocationId()"
  fullName: "com.microsoft.signalr.InvocationMessage.getInvocationId()"
  name: "getInvocationId()"
  nameWithType: "InvocationMessage.getInvocationId()"
  syntax: "public String getInvocationId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.InvocationMessage.getMessageType()"
  fullName: "com.microsoft.signalr.InvocationMessage.getMessageType()"
  name: "getMessageType()"
  nameWithType: "InvocationMessage.getMessageType()"
  overridden: "com.microsoft.signalr.HubMessage.getMessageType()"
  syntax: "public HubMessageType getMessageType()"
  returns:
    type: "<xref href=\"com.microsoft.signalr.HubMessageType?alt=com.microsoft.signalr.HubMessageType&text=HubMessageType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.InvocationMessage.getStreamIds()"
  fullName: "com.microsoft.signalr.InvocationMessage.getStreamIds()"
  name: "getStreamIds()"
  nameWithType: "InvocationMessage.getStreamIds()"
  syntax: "public Collection<String> getStreamIds()"
  returns:
    type: "<xref href=\"java.util.Collection?alt=java.util.Collection&text=Collection\" data-throw-if-not-resolved=\"False\" />&lt;<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />&gt;"
- uid: "com.microsoft.signalr.InvocationMessage.getTarget()"
  fullName: "com.microsoft.signalr.InvocationMessage.getTarget()"
  name: "getTarget()"
  nameWithType: "InvocationMessage.getTarget()"
  syntax: "public String getTarget()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.signalr"
artifact: com.microsoft.signalr:signalr:5.0.10

### YamlMime:JavaType
uid: "com.microsoft.signalr.InvocationBindingFailureMessage"
fullName: "com.microsoft.signalr.InvocationBindingFailureMessage"
name: "InvocationBindingFailureMessage"
nameWithType: "InvocationBindingFailureMessage"
inheritances:
- "<xref href=\"java.lang.Object?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
- "<xref href=\"com.microsoft.signalr.HubMessage?displayProperty=fullName\" data-throw-if-not-resolved=\"False\" />"
inheritedMembers:
- "com.microsoft.signalr.HubMessage.getMessageType()"
- "java.lang.Object.clone()"
- "java.lang.Object.equals(java.lang.Object)"
- "java.lang.Object.finalize()"
- "java.lang.Object.getClass()"
- "java.lang.Object.hashCode()"
- "java.lang.Object.notify()"
- "java.lang.Object.notifyAll()"
- "java.lang.Object.toString()"
- "java.lang.Object.wait()"
- "java.lang.Object.wait(long)"
- "java.lang.Object.wait(long,int)"
syntax: "public class InvocationBindingFailureMessage extends HubMessage"
constructors:
- uid: "com.microsoft.signalr.InvocationBindingFailureMessage.InvocationBindingFailureMessage(java.lang.String,java.lang.String,java.lang.Exception)"
  fullName: "com.microsoft.signalr.InvocationBindingFailureMessage.InvocationBindingFailureMessage(String invocationId, String target, Exception exception)"
  name: "InvocationBindingFailureMessage(String invocationId, String target, Exception exception)"
  nameWithType: "InvocationBindingFailureMessage.InvocationBindingFailureMessage(String invocationId, String target, Exception exception)"
  parameters:
  - name: "invocationId"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "target"
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
  - name: "exception"
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public InvocationBindingFailureMessage(String invocationId, String target, Exception exception)"
methods:
- uid: "com.microsoft.signalr.InvocationBindingFailureMessage.getException()"
  fullName: "com.microsoft.signalr.InvocationBindingFailureMessage.getException()"
  name: "getException()"
  nameWithType: "InvocationBindingFailureMessage.getException()"
  syntax: "public Exception getException()"
  returns:
    type: "<xref href=\"java.lang.Exception?alt=java.lang.Exception&text=Exception\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.InvocationBindingFailureMessage.getInvocationId()"
  fullName: "com.microsoft.signalr.InvocationBindingFailureMessage.getInvocationId()"
  name: "getInvocationId()"
  nameWithType: "InvocationBindingFailureMessage.getInvocationId()"
  syntax: "public String getInvocationId()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.InvocationBindingFailureMessage.getMessageType()"
  fullName: "com.microsoft.signalr.InvocationBindingFailureMessage.getMessageType()"
  name: "getMessageType()"
  nameWithType: "InvocationBindingFailureMessage.getMessageType()"
  overridden: "com.microsoft.signalr.HubMessage.getMessageType()"
  syntax: "public HubMessageType getMessageType()"
  returns:
    type: "<xref href=\"com.microsoft.signalr.HubMessageType?alt=com.microsoft.signalr.HubMessageType&text=HubMessageType\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.signalr.InvocationBindingFailureMessage.getTarget()"
  fullName: "com.microsoft.signalr.InvocationBindingFailureMessage.getTarget()"
  name: "getTarget()"
  nameWithType: "InvocationBindingFailureMessage.getTarget()"
  syntax: "public String getTarget()"
  returns:
    type: "<xref href=\"java.lang.String?alt=java.lang.String&text=String\" data-throw-if-not-resolved=\"False\" />"
type: "class"
metadata: {}
package: "com.microsoft.signalr"
artifact: com.microsoft.signalr:signalr:5.0.10
